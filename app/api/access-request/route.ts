import { NextRequest, NextResponse } from 'next/server'

/**
 * API endpoint –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø
 * –õ–æ–≥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è MagistrTheOne
 */
export async function POST(request: NextRequest) {
  try {
    const formData = await request.json()

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    const requiredFields = ['name', 'email', 'experience', 'projectDescription']
    for (const field of requiredFields) {
      if (!formData[field] || formData[field].trim().length === 0) {
        return NextResponse.json(
          {
            error: '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
            message: `–ü–æ–ª–µ ${field} –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è`
          },
          { status: 400 }
        )
      }
    }

    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É –¥–ª—è MagistrTheOne
    console.log('üéØ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –î–û–°–¢–£–ü –ö NOCTURIDE')
    console.log('=====================================')
    console.log('üë§ –ò–º—è:', formData.name)
    console.log('üìß Email:', formData.email)
    console.log('üè¢ –ö–æ–º–ø–∞–Ω–∏—è:', formData.company || '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    console.log('üíº –†–æ–ª—å:', formData.role || '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    console.log('‚è∞ –í—Ä–µ–º—è:', new Date().toLocaleString('ru-RU'))
    console.log('üåê IP:', request.ip || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    console.log('')
    console.log('üíª –û–ø—ã—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:')
    console.log(formData.experience)
    console.log('')
    console.log('üöÄ –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:')
    console.log(formData.projectDescription)
    console.log('')
    if (formData.goals) {
      console.log('üéØ –¶–µ–ª–∏ –∏ –∑–∞–¥–∞—á–∏:')
      console.log(formData.goals)
      console.log('')
    }
    if (formData.timeline) {
      console.log('‚è±Ô∏è –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏:')
      console.log(formData.timeline)
      console.log('')
    }
    console.log('=====================================')
    console.log('üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞:', formData.email)

    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ email
    // await sendEmailToMagistrTheOne(formData)

    return NextResponse.json({
      success: true,
      message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞'
    })

  } catch (error: any) {
    console.error('Error processing access request:', error)
    return NextResponse.json(
      {
        error: '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏',
        message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
      },
      { status: 500 }
    )
  }
}
